import * as mongoose from 'mongoose';
export declare const ProjectSchema: mongoose.Schema<any, mongoose.Model<any, any, any, any, any, any>, {}, {}, {}, {}, mongoose.DefaultSchemaOptions, {
    startCoordinates: number[];
    endCoordinates: number[];
    cargoItems: mongoose.Types.DocumentArray<{
        des?: string;
        extra?: boolean;
        height?: number;
        lenght?: number;
        pis?: number;
        title?: string;
        weight?: number;
        width?: number;
    }>;
    status: string;
    driverId: string;
    bids: {
        time: number;
        driverId?: string;
        driverName?: string;
        price?: number;
    }[];
    driverName: string;
    userBack: number;
    driverCost: number;
    date?: string;
    projectId?: string;
    payUrl?: string;
    userId?: string;
    time?: string;
    distance?: number;
    duration?: number;
    startLocation?: string;
    endLocation?: string;
    totalCost?: number;
    truckCost?: number;
    helperCost?: number;
    extraCost?: number;
    vehcle?: {
        id?: number;
        name?: string;
        length?: number;
        height?: number;
        title?: string;
        weight?: number;
        width?: number;
        dis?: string;
        helper?: boolean;
        img?: string;
        totalWeight?: number;
    };
    payId?: string;
}, mongoose.Document<unknown, {}, mongoose.FlatRecord<{
    startCoordinates: number[];
    endCoordinates: number[];
    cargoItems: mongoose.Types.DocumentArray<{
        des?: string;
        extra?: boolean;
        height?: number;
        lenght?: number;
        pis?: number;
        title?: string;
        weight?: number;
        width?: number;
    }>;
    status: string;
    driverId: string;
    bids: {
        time: number;
        driverId?: string;
        driverName?: string;
        price?: number;
    }[];
    driverName: string;
    userBack: number;
    driverCost: number;
    date?: string;
    projectId?: string;
    payUrl?: string;
    userId?: string;
    time?: string;
    distance?: number;
    duration?: number;
    startLocation?: string;
    endLocation?: string;
    totalCost?: number;
    truckCost?: number;
    helperCost?: number;
    extraCost?: number;
    vehcle?: {
        id?: number;
        name?: string;
        length?: number;
        height?: number;
        title?: string;
        weight?: number;
        width?: number;
        dis?: string;
        helper?: boolean;
        img?: string;
        totalWeight?: number;
    };
    payId?: string;
}>> & mongoose.FlatRecord<{
    startCoordinates: number[];
    endCoordinates: number[];
    cargoItems: mongoose.Types.DocumentArray<{
        des?: string;
        extra?: boolean;
        height?: number;
        lenght?: number;
        pis?: number;
        title?: string;
        weight?: number;
        width?: number;
    }>;
    status: string;
    driverId: string;
    bids: {
        time: number;
        driverId?: string;
        driverName?: string;
        price?: number;
    }[];
    driverName: string;
    userBack: number;
    driverCost: number;
    date?: string;
    projectId?: string;
    payUrl?: string;
    userId?: string;
    time?: string;
    distance?: number;
    duration?: number;
    startLocation?: string;
    endLocation?: string;
    totalCost?: number;
    truckCost?: number;
    helperCost?: number;
    extraCost?: number;
    vehcle?: {
        id?: number;
        name?: string;
        length?: number;
        height?: number;
        title?: string;
        weight?: number;
        width?: number;
        dis?: string;
        helper?: boolean;
        img?: string;
        totalWeight?: number;
    };
    payId?: string;
}> & {
    _id: mongoose.Types.ObjectId;
}>;
